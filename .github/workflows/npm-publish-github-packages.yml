name: Node.js CI/CD Pipeline  # 工作流名称（自定义）

on:  # 触发条件（定义何时启动流程）
  push:  
    # 当代码推送到指定分支时触发
    branches: [ master ]  # 监听的分支（如main、develop）
    # CD 部分：仅当推送特定格式的 tag（如 v1.0.0）时触发发布
    tags: [ 'v*.*.*' ]

jobs:  # 定义工作流中的任务（Job）
  build:  # 第一个任务：构建与测试
    # 此作业仅在由 push 事件触发时运行，不会由 tag 触发
    if: github.event_name == 'push' || startsWith(github.ref, 'refs/tags/') == false
    runs-on: ubuntu-latest  # 运行环境（GitHub提供的Ubuntu虚拟机）
    
    steps:  # 任务的具体步骤
      - name: Checkout code  # 步骤1：拉取代码
        uses: actions/checkout@v3  # 使用GitHub官方的checkout动作（必用）
      
      - name: Set up Node.js  # 步骤2：设置Node.js环境
        uses: actions/setup-node@v3  # 使用GitHub官方的Node.js设置动作
        with:
          node-version: '18'  # 指定Node.js版本（如16、18、20）
          cache: 'npm'  # 缓存npm依赖，加快后续安装速度
      
      - name: Install dependencies  # 步骤3：安装项目依赖
        run: npm ci  # 运行npm ci命令（需项目有package.json）
      
      - name: Run Eslint  
        run: npm run lint 

      - name: Run tests  # 步骤4：运行测试
        run: npm run test:unit  # 运行npm test命令（需项目配置测试框架，如Jest、Mocha）
      
      - name: Build artifacts  # 步骤5：构建产物（如打包前端项目）
        run: npm run build  # 运行npm run build命令（需项目配置build脚本，如Webpack、Vite）

  deploy:  # 第二个任务：部署（可选，仅在CI通过后执行）
    needs: build  # 依赖build任务（build成功后才执行deploy）
    if: startsWith(github.ref, 'refs/tags/') # 确保仅在推送 tag 时运行
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/' # 确保这是 npm 官方 registry
          cache: 'npm'  # 缓存npm依赖，加快后续安装速度

      - name: Install dependencies  # 步骤3：安装项目依赖
        run: npm ci  # 运行npm ci命令（需项目有package.json）

      - name: Check current registry
        run: npm config get registry

      - name: Set registry to official source
        run: npm config set registry https://registry.npmjs.org/

      # 发布到npm（仅在构建成功后执行）
      - name: Publish to Npm
        run: npm publish --access public  # 发布组件库（--access public表示公开包，私有包需替换为--access private）
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}  # 使用GitHub Secret中的npm token认证